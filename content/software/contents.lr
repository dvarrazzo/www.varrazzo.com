_model: portfolio

---
description: A list of free-software projects
---
header_class: has-border
---
footer_class: has-border
---
title: Software projects
---
rows:

#### row2 ####
title: Free Software projects
----
title_style: title
----
image: /img/software/londiste.jpg
----
image_position: left
----
background: light
----
body:

A selection of free software projects I maintain or contribute to.

Some of these projects are actively maintained: some might use some extra
effort.

If you would like to encourage their development, or would like to steer
development towards features you are interested into, `your contribution is
welcome <https://github.com/sponsors/dvarrazzo/>`__.

.. raw:: html

    <a class="button" href="https://github.com/sponsors/dvarrazzo/">
        <i class="fa fa-heart fa-lg" style="color: #ea4aaa;"></i>
        Funding
    </a>

#### row2 ####
title: psycopg3
----
title_style: balloon
----
image: /img/software/psycopg3.jpg
----
image_position: right
----
background: light
----
body:

I have been :ref:`thinking about a psycopg2 successor
<blog/thinking-psycopg3>` for a long time. In my blog you can find a `series
of articles </blog/tag/psycopg/>`__ about its development and major
milestones.

The development of psycopg3_ has started a few months ago and the project is
keeping a good pace. This has been only possible so far thanks to the project
sponsors_.

If you are a Python/PostgreSQL developer or company and would like to contribute to the development of the next generation of the driver please `consider a sponsorship`__.

.. _psycopg3: https://www.psycopg.org/psycopg3/
.. _sponsors: https://www.psycopg.org/sponsors/
.. __: https://github.com/sponsors/dvarrazzo/


#### row2 ####
title: psycopg2
----
title_style: balloon
----
image: /img/software/psycopg.jpg
----
image_position: left
----
background: light
----
body:

`psycopg2`_ is the de-facto standard for interoperation between Python and
PostgreSQL.

I have been involved in development and testing since inception (when psycopg 1
was a thing), and since about 2010 have been maintaining the project: first
writing documentation, completing a test grid, setting up the web presence
(website, mailing list), and finally finding myself responsible for the
codebase.

Please refer to the `psycopg homepage`__ for any information about the project.

.. __: psycopg2_
.. _psycopg2: https://www.psycopg.org/
.. _Python: https://www.python.org/
.. _PostgreSQL: https://www.postgresql.org/


#### row2 ####
title: mature software
----
title_style: balloon
----
image: /img/software/egham.jpg
----
image_position: right
----
background: light
----
body:

A selection of widely used packages I've written. Some of them are relatively
active, others are only rarely maintained.

If you would like to have new features developed please get in touch.

- `pgmp <https://www.varrazzo.com/pgmp/>`__: PostgreSQL Multiple Precision
  Arithmetic

- `PGXN Client <https://pgxn.github.io/pgxnclient/>`__: the package manager
  for the `PostgreSQL Extension Network <https://pgxn.org/>`__

- `pg_repack <https://reorg.github.io/pg_repack/>`__: remove bloat from
  PostgreSQL tables

- `py-setproctitle <https://github.com/dvarrazzo/py-setproctitle>`__:
  customize process names in Python programs

- :ref:`italian_fts </fts_italiano>`: A PostgreSQL extension for high quality
  Italian full-text search.

#### row2 ####
title: experimental software
----
title_style: balloon
----
image: /img/software/uphill.jpg
----
image_position: left
----
background: light
----
body:

These project are in development or design stage and haven't reached maturity
yet. Some of them have been used in production environment for specific cases
but they are not generic enough.

I am especially interested in bringing those projects to maturity: if you are
interested in their development it would be great to know!

- `pg_seldump <https://github.com/dvarrazzo/pg_seldump>`__: create selective
  data dump from PostgreSQL

- `replisome <https://github.com/dvarrazzo/replisome>`__: The most flexible
  logical replication system for PostgreSQL

- `bromine <https://github.com/dvarrazzo/bromine>`__: Pythonic wrapper from
  Selenium web testing

- `pgaudit <https://github.com/dvarrazzo/pgaudit>`__: audit trail for
  PostgreSQL

- `weeder <https://github.com/dvarrazzo/weeder>`__: Remove unneeded historical
  files

- **pg_cash**: a double-entry system for PostgreSQL

- **bacon**: an OLAP cube for PostgreSQL

---
text_style: p100
